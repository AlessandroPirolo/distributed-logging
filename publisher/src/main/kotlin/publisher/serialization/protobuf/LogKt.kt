//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: log.proto

package publisher.serialization.protobuf;

import com.google.protobuf.empty
import com.google.protobuf.kotlin.DslList
import publisher.protobuf.LogOuterClass

@kotlin.jvm.JvmName("-initializelog")
inline fun log(block: LogKt.Dsl.() -> kotlin.Unit): LogOuterClass.Log =
  LogKt.Dsl._create(LogOuterClass.Log.newBuilder()).apply { block() }._build()
object LogKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: LogOuterClass.Log.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: LogOuterClass.Log.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): LogOuterClass.Log = _builder.build()

    /**
     * <code>.protobuf.Log.LogLevel logLevel = 1;</code>
     */
     var logLevel: LogOuterClass.Log.LogLevel
      @JvmName("getLogLevel")
      get() = _builder.getLogLevel()
      @JvmName("setLogLevel")
      set(value) {
        _builder.setLogLevel(value)
      }
    /**
     * <code>.protobuf.Log.LogLevel logLevel = 1;</code>
     */
    fun clearLogLevel() {
      _builder.clearLogLevel()
    }

    /**
     * <code>string msg = 2;</code>
     */
    var msg: kotlin.String
      @JvmName("getMsg")
      get() = _builder.getMsg()
      @JvmName("setMsg")
      set(value) {
        _builder.setMsg(value)
      }
    /**
     * <code>string msg = 2;</code>
     */
    fun clearMsg() {
      _builder.clearMsg()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    class TagProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <code>repeated .protobuf.Log.Tag tag = 3;</code>
     */
    var tag: com.google.protobuf.kotlin.DslList<LogOuterClass.Log.Tag, TagProxy> = DslList(emptyList())
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getTagList()
      )
    /**
     * <code>repeated .protobuf.Log.Tag tag = 3;</code>
     * @param value The tag to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addTag")
    fun com.google.protobuf.kotlin.DslList<LogOuterClass.Log.Tag, TagProxy>.add(value: LogOuterClass.Log.Tag) {
      _builder.addTag(value)
    }
    /**
     * <code>repeated .protobuf.Log.Tag tag = 3;</code>
     * @param value The tag to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignTag")
    @Suppress("NOTHING_TO_INLINE")
    inline operator fun com.google.protobuf.kotlin.DslList<LogOuterClass.Log.Tag, TagProxy>.plusAssign(value: LogOuterClass.Log.Tag) {
      add(value)
    }
    /**
     * <code>repeated .protobuf.Log.Tag tag = 3;</code>
     * @param values The tag to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllTag")
    fun com.google.protobuf.kotlin.DslList<LogOuterClass.Log.Tag, TagProxy>.addAll(values: kotlin.collections.Iterable<LogOuterClass.Log.Tag>) {
      _builder.addAllTag(values)
    }
    /**
     * <code>repeated .protobuf.Log.Tag tag = 3;</code>
     * @param values The tag to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllTag")
    @Suppress("NOTHING_TO_INLINE")
    inline operator fun com.google.protobuf.kotlin.DslList<LogOuterClass.Log.Tag, TagProxy>.plusAssign(values: kotlin.collections.Iterable<LogOuterClass.Log.Tag>) {
      addAll(values)
    }
    /**
     * <code>repeated .protobuf.Log.Tag tag = 3;</code>
     * @param index The index to set the value at.
     * @param value The tag to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setTag")
    operator fun com.google.protobuf.kotlin.DslList<LogOuterClass.Log.Tag, TagProxy>.set(index: kotlin.Int, value: LogOuterClass.Log.Tag) {
      _builder.setTag(index, value)
    }
    /**
     * <code>repeated .protobuf.Log.Tag tag = 3;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearTag")
    fun com.google.protobuf.kotlin.DslList<LogOuterClass.Log.Tag, TagProxy>.clear() {
      _builder.clearTag()
    }


    /**
     * <code>.google.protobuf.Timestamp timeStamp = 4;</code>
     */
    var timeStamp: com.google.protobuf.Timestamp
      @JvmName("getTimeStamp")
      get() = _builder.getTimeStamp()
      @JvmName("setTimeStamp")
      set(value) {
        _builder.setTimeStamp(value)
      }
    /**
     * <code>.google.protobuf.Timestamp timeStamp = 4;</code>
     */
    fun clearTimeStamp() {
      _builder.clearTimeStamp()
    }
    /**
     * <code>.google.protobuf.Timestamp timeStamp = 4;</code>
     * @return Whether the timeStamp field is set.
     */
    fun hasTimeStamp(): kotlin.Boolean {
      return _builder.hasTimeStamp()
    }
  }
  @kotlin.jvm.JvmName("-initializetag")
  inline fun tag(block: TagKt.Dsl.() -> kotlin.Unit): LogOuterClass.Log.Tag =
    TagKt.Dsl._create(LogOuterClass.Log.Tag.newBuilder()).apply { block() }._build()
  object TagKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    class Dsl private constructor(
      private val _builder: LogOuterClass.Log.Tag.Builder
    ) {
      companion object {
        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _create(builder: LogOuterClass.Log.Tag.Builder): Dsl = Dsl(builder)
      }

      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _build(): LogOuterClass.Log.Tag = _builder.build()

      /**
       * <code>string key = 1;</code>
       */
      var key: kotlin.String
        @JvmName("getKey")
        get() = _builder.getKey()
        @JvmName("setKey")
        set(value) {
          _builder.setKey(value)
        }
      /**
       * <code>string key = 1;</code>
       */
      fun clearKey() {
        _builder.clearKey()
      }

      /**
       * <code>string value = 2;</code>
       */
      var value: kotlin.String
        @JvmName("getValue")
        get() = _builder.getValue()
        @JvmName("setValue")
        set(value) {
          _builder.setValue(value)
        }
      /**
       * <code>string value = 2;</code>
       */
      fun clearValue() {
        _builder.clearValue()
      }
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun LogOuterClass.Log.copy(block: LogKt.Dsl.() -> kotlin.Unit): LogOuterClass.Log =
  LogKt.Dsl._create(this.toBuilder()).apply { block() }._build()

@kotlin.jvm.JvmSynthetic
inline fun LogOuterClass.Log.Tag.copy(block: LogKt.TagKt.Dsl.() -> kotlin.Unit): LogOuterClass.Log.Tag =
  LogKt.TagKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val LogOuterClass.LogOrBuilder.timeStampOrNull: com.google.protobuf.Timestamp?
  get() = if (hasTimeStamp()) getTimeStamp() else null

